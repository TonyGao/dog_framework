{# EF标准Twig UI库 #}

{# {% macro barButton(type = 'create', text = null, classes = 'btn outline primary medium mini round icon', icon = null, id = null, attributes = {}) %}
    {# 判断是否传入了自定义图标，如果没有则根据 type 使用默认的图标
    {% set finalIcon = icon is not null ? icon : (icons[type] ?? 'fa-regular fa-question-circle') %}
    {% set buttonText = text is not null ? text : (label[type]) %}
    {# 如果没有传递 id，则使用 type 作为 id 的值
    {% set buttonId = id is not null ? id : type %}

    <button class="{{ classes }}" id="{{ buttonId }}" {% for attr, value in attributes %}{{ attr }}="{{ value }}" {% endfor %}>
        <i class="{{ finalIcon }}"></i>
        {{ buttonText }}
    </button>
{% endmacro %} #}

{% macro barButton(type = 'create', text = null, classes = 'btn outline primary medium mini round icon', icon = null, id = null, attributes = {}, extraClasses = []) %}
    {# 判断是否传入了自定义图标，如果没有则根据 type 使用默认的图标 #}
    {% set finalIcon = icon is not null ? icon : (icons[type] ?? 'fa-regular fa-question-circle') %}
    {% set buttonText = text is not null ? text : (label[type]) %}
    {# 如果没有传递 id，则使用 type 作为 id 的值 #}
    {% set buttonId = id is not null ? id : type %}
    {# 动态拼接 classes 和 extraClasses #}
    {% set finalClasses = classes ~ ' ' ~ extraClasses|join(' ') %}
    
    <button class="{{ finalClasses|trim }}" id="{{ buttonId }}"
        {% for attr, value in attributes %}
            {{ attr }}="{{ value }}"
        {% endfor %}
    >
        <i class="{{ finalIcon }}"></i>
        {{ buttonText }}
    </button>
{% endmacro %}


{# 单个复选框组件 #}
{#  使用方法：
   {{ ui.checkbox('checkbox1', 'Option 1', '0') }}
   {{ ui.checkbox('checkbox2', 'Option 2', '0', true) }}
   {{ ui.checkbox('checkbox3', 'Option 3', '0', false, 'custom-class') }} 
#}
{% macro checkbox(id, label, value, checked=false, className='') %}
    <label class="ef-checkbox {{ className }}">
        <input type="checkbox" class="ef-checkbox-target" id="{{ id }}" value="{{ value }}" {% if checked %}checked{% endif %}>
        <span class="ef-icon-hover ef-checkbox-icon-hover">
            <div class="ef-checkbox-icon"></div>
        </span>
        <span class="ef-checkbox-label">{{ label }}</span>
    </label>
{% endmacro %}

{# 横向复选框组组件 #}
{% macro checkbox_group_horizontal(checkboxes) %}
    <span class="ef-checkbox-group ef-checkbox-group-direction-horizontal">
        {% for checkbox in checkboxes %}
            {{ _self.checkbox(checkbox.id, checkbox.label, checkbox.value, checkbox.checked) }}
        {% endfor %}
    </span>
{% endmacro %}

{# 纵向复选框组组件 #}
{% macro checkbox_group_vertical(checkboxes) %}
    <span class="ef-checkbox-group ef-checkbox-group-direction-vertical">
        {% for checkbox in checkboxes %}
            {{ _self.checkbox(checkbox.id, checkbox.label, checkbox.value, checkbox.checked) }}
        {% endfor %}
    </span>
{% endmacro %}


{# 定义工具栏宏，下边是示例代码 #}
	{# {{ ui.toolBar([
		{ type: 'create', text: '新增', icon: 'fa-solid fa-plus-circle', id: 'add-button' },
		{ type: 'delete', text: '删除', icon: 'fa-solid fa-minus-circle', id: 'delete-button' },
		{ type: 'edit', text: '编辑', icon: 'fa-solid fa-edit', id: 'edit-button' },
		{ type: 'update', text: '修改', icon: 'fa-solid fa-pencil-alt', id: 'update-button' },
		{ type: 'filter', text: '搜索', icon: 'fa-solid fa-filter', id: 'filter-button'~uniqueId }
	], { 'parentId': gridId }) }} #}
{% macro toolBar(buttons = [], defaultAttributes = {}, defaultClasses = 'btn outline primary medium mini round icon') %}
    <div class="toolbar">
        <div class="toolbar-box sortable-toolbar-box">
            <div class="toolbar-wrap sortable-toolbar-wrap">
                <div class="toolbar-content">
                    {% for button in buttons %}
                        {# 合并默认属性与按钮的属性，覆盖优先 #}
                        {% set mergedAttributes = defaultAttributes|merge(button.attributes|default({})) %}
                        {# 合并默认类与按钮的类，优先使用按钮类 #}
                        {% set finalClasses = (defaultClasses ~ ' ' ~ button.classes|default(''))|trim %}
                        
                        {{ _self.barButton(
                            button.type,
                            button.text,
                            finalClasses,
                            button.icon|default(null),
                            button.id|default(null),
                            mergedAttributes
                        ) }}
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
{% endmacro %}

{% macro formSubmitButton() %}
	<div class="ef-row ef-row-align-start ef-row-justify-start ef-form-item ef-form-item-layout-horizontal">
		<div class="ef-col ef-col-5 ef-form-item-label-col">
			<label class="ef-form-item-label"></label>
		</div>
		<div class="ef-col ef-col-19 ef-form-item-wrapper-col">
			<div class="ef-form-item-content-wrapper">
				<div class="ef-form-item-content ef-form-item-content-flex">
					<div class="ef-space ef-space-horizontal ef-space-align-center">
						<div class="ef-space-item" style="margin-right: 8px;">
							<button class="btn primary medium" type="submit">提交</button>
						</div>
						<div class="ef-space-item">
							<button class="btn primary medium" type="reset" onclick="window.location.reload();">返回</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
{% endmacro %}

{# 定义模态框宏 #}
{% macro modal(id, title, body, footer, options = {}) %}
<div class="ef-modal-container" id="{{ id }}" style="z-index: {{ options.zIndex | default(1001) }};">
    <div class="ef-modal-mask"></div>
    <div class="ef-modal-wrapper {{ options.wrapperClass | default('ef-modal-wrapper-align-center') }}">
        <div class="ef-modal" style="width:{{ options.width | default('fit-content') }}">
            <!-- Header -->
            <div class="ef-modal-header">
                <div class="ef-modal-title {{ options.titleAlignClass | default('ef-modal-title-align-left') }}">
                    {{ title }}
                </div>
                <div tabindex="-1" role="button" aria-label="Close" class="ef-modal-close-btn" onclick="{{ options.onClose | default('') }}">
                    <span class="ef-icon-hover">
                        <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" class="ef-icon ef-icon-close" stroke-width="4" stroke-linecap="butt" stroke-linejoin="miter">
                            <path d="M9.857 9.858 24 24m0 0 14.142 14.142M24 24 38.142 9.858M24 24 9.857 38.142"></path>
                        </svg>
                    </span>
                </div>
            </div>
            <!-- Body -->
            <div class="ef-modal-body">
                {{ body|raw }}
            </div>
            <!-- Footer -->
            <div class="ef-modal-footer">
                {{ footer|raw }}
            </div>
        </div>
    </div>
</div>
{% endmacro %}

{% macro formValid() %}
<script>
$(document).ready(function () {
  let form = $("form");
  form.formValid();
})
</script>
{% endmacro %}

{# 数字输入框组件 #}
{# 使用方法：
   {{ ui.inputNumber('input1', 100, 0, 1, 0) }} // id, max, min, step, precision
   // 这几个参数都是可选的，分别代表：id, 最大值, 最小值, 步长, 小数位数
   {{ ui.inputNumber('input2', null, null, 1.5, 3) }} // 不设置最大最小值
#}
{% macro inputNumber(id, max = null, min = null, step = 1, precision = 0, placeholder = "") %}
    <span class="ef-input-wrapper ef-input-number ef-input-number-mode-embed ef-input-number-size-medium">
        <input role="spinbutton"
            id="{{ id }}"
            {% if max is not null %}num-valuemax="{{ max }}"{% endif %}
            {% if min is not null %}num-valuemin="{{ min }}"{% endif %}
            num-value=""
            step="{{ step }}"
            precision="{{ precision }}"
            class="ef-input ef-input-size-medium number"
            type="text"
            placeholder="{{ placeholder }}"
        >
        <span class="ef-input-suffix">
            <div class="ef-input-number-step">
                <button class="ef-input-number-step-button add" type="button" tabindex="-1">
                    <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" class="ef-icon ef-icon-up" stroke-width="4" stroke-linecap="butt" stroke-linejoin="miter"><path d="M39.6 30.557 24.043 15 8.487 30.557"></path></svg>
                </button>
                <button class="ef-input-number-step-button subtract" type="button" tabindex="-1">
                    <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" class="ef-icon ef-icon-down" stroke-width="4" stroke-linecap="butt" stroke-linejoin="miter"><path d="M39.6 17.443 24.043 33 8.487 17.443"></path></svg>
                </button>
            </div>
        </span>
    </span>
{% endmacro %}
